// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
*/
var blocks = blocks || {};

/**
 * @const
*/
blocks.fbs = blocks.fbs || {};

/**
 * @enum
 */
blocks.fbs.Action = {
  INITIAL_POS: 0,
  MOVE: 1,
  ASK_CHUNK: 2,
  CHUNK: 3,
  PLACE_BLOCK: 4,
  BREAK_BLOCK: 5,
  UPDATE_BLOCK: 6,
  PLAYER_CONNECT: 7,
  PLAYER_DISCONNECT: 8
};

/**
 * @enum
 */
blocks.fbs.AType = {
  NONE: 0,
  Player: 1,
  Chunk: 2,
  PosObj: 3,
  BlockPos: 4
};

/**
 * @constructor
 */
blocks.fbs.Pos = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {blocks.fbs.Pos}
 */
blocks.fbs.Pos.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
blocks.fbs.Pos.prototype.x = function() {
  return this.bb.readInt32(this.bb_pos);
};

/**
 * @returns {number}
 */
blocks.fbs.Pos.prototype.y = function() {
  return this.bb.readInt32(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
blocks.fbs.Pos.prototype.z = function() {
  return this.bb.readInt32(this.bb_pos + 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @returns {flatbuffers.Offset}
 */
blocks.fbs.Pos.createPos = function(builder, x, y, z) {
  builder.prep(4, 12);
  builder.writeInt32(z);
  builder.writeInt32(y);
  builder.writeInt32(x);
  return builder.offset();
};

/**
 * @constructor
 */
blocks.fbs.Block = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {blocks.fbs.Block}
 */
blocks.fbs.Block.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
blocks.fbs.Block.prototype.id = function() {
  return this.bb.readUint16(this.bb_pos);
};

/**
 * @returns {number}
 */
blocks.fbs.Block.prototype.variant = function() {
  return this.bb.readUint16(this.bb_pos + 2);
};

/**
 * @returns {boolean}
 */
blocks.fbs.Block.prototype.air = function() {
  return !!this.bb.readInt8(this.bb_pos + 4);
};

/**
 * @returns {boolean}
 */
blocks.fbs.Block.prototype.transparent = function() {
  return !!this.bb.readInt8(this.bb_pos + 5);
};

/**
 * @returns {number}
 */
blocks.fbs.Block.prototype.light = function() {
  return this.bb.readInt32(this.bb_pos + 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 * @param {number} variant
 * @param {boolean} air
 * @param {boolean} transparent
 * @param {number} light
 * @returns {flatbuffers.Offset}
 */
blocks.fbs.Block.createBlock = function(builder, id, variant, air, transparent, light) {
  builder.prep(4, 12);
  builder.writeInt32(light);
  builder.pad(2);
  builder.writeInt8(+transparent);
  builder.writeInt8(+air);
  builder.writeInt16(variant);
  builder.writeInt16(id);
  return builder.offset();
};

/**
 * @constructor
 */
blocks.fbs.BlockPos = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {blocks.fbs.BlockPos}
 */
blocks.fbs.BlockPos.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {blocks.fbs.BlockPos=} obj
 * @returns {blocks.fbs.BlockPos}
 */
blocks.fbs.BlockPos.getRootAsBlockPos = function(bb, obj) {
  return (obj || new blocks.fbs.BlockPos).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {blocks.fbs.Block=} obj
 * @returns {blocks.fbs.Block}
 */
blocks.fbs.BlockPos.prototype.block = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new blocks.fbs.Block).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {blocks.fbs.Pos=} obj
 * @returns {blocks.fbs.Pos}
 */
blocks.fbs.BlockPos.prototype.pos = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new blocks.fbs.Pos).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
blocks.fbs.BlockPos.startBlockPos = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} blockOffset
 */
blocks.fbs.BlockPos.addBlock = function(builder, blockOffset) {
  builder.addFieldStruct(0, blockOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 */
blocks.fbs.BlockPos.addPos = function(builder, posOffset) {
  builder.addFieldStruct(1, posOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
blocks.fbs.BlockPos.endBlockPos = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
blocks.fbs.PosObj = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {blocks.fbs.PosObj}
 */
blocks.fbs.PosObj.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {blocks.fbs.PosObj=} obj
 * @returns {blocks.fbs.PosObj}
 */
blocks.fbs.PosObj.getRootAsPosObj = function(bb, obj) {
  return (obj || new blocks.fbs.PosObj).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {blocks.fbs.Pos=} obj
 * @returns {blocks.fbs.Pos}
 */
blocks.fbs.PosObj.prototype.pos = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new blocks.fbs.Pos).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
blocks.fbs.PosObj.startPosObj = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 */
blocks.fbs.PosObj.addPos = function(builder, posOffset) {
  builder.addFieldStruct(0, posOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
blocks.fbs.PosObj.endPosObj = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
blocks.fbs.Chunk = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {blocks.fbs.Chunk}
 */
blocks.fbs.Chunk.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {blocks.fbs.Chunk=} obj
 * @returns {blocks.fbs.Chunk}
 */
blocks.fbs.Chunk.getRootAsChunk = function(bb, obj) {
  return (obj || new blocks.fbs.Chunk).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
blocks.fbs.Chunk.prototype.version = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
blocks.fbs.Chunk.prototype.size = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @param {blocks.fbs.Pos=} obj
 * @returns {blocks.fbs.Pos}
 */
blocks.fbs.Chunk.prototype.cid = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new blocks.fbs.Pos).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {number} index
 * @param {blocks.fbs.Block=} obj
 * @returns {blocks.fbs.Block}
 */
blocks.fbs.Chunk.prototype.blocks = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new blocks.fbs.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 12, this.bb) : null;
};

/**
 * @returns {number}
 */
blocks.fbs.Chunk.prototype.blocksLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
blocks.fbs.Chunk.startChunk = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} version
 */
blocks.fbs.Chunk.addVersion = function(builder, version) {
  builder.addFieldInt8(0, version, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} size
 */
blocks.fbs.Chunk.addSize = function(builder, size) {
  builder.addFieldInt8(1, size, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} cidOffset
 */
blocks.fbs.Chunk.addCid = function(builder, cidOffset) {
  builder.addFieldStruct(2, cidOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} blocksOffset
 */
blocks.fbs.Chunk.addBlocks = function(builder, blocksOffset) {
  builder.addFieldOffset(3, blocksOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
blocks.fbs.Chunk.startBlocksVector = function(builder, numElems) {
  builder.startVector(12, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
blocks.fbs.Chunk.endChunk = function(builder) {
  var offset = builder.endObject();
  builder.requiredField(offset, 8); // cid
  return offset;
};

/**
 * @constructor
 */
blocks.fbs.Player = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {blocks.fbs.Player}
 */
blocks.fbs.Player.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {blocks.fbs.Player=} obj
 * @returns {blocks.fbs.Player}
 */
blocks.fbs.Player.getRootAsPlayer = function(bb, obj) {
  return (obj || new blocks.fbs.Player).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
blocks.fbs.Player.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {blocks.fbs.Pos=} obj
 * @returns {blocks.fbs.Pos}
 */
blocks.fbs.Player.prototype.pos = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new blocks.fbs.Pos).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
blocks.fbs.Player.startPlayer = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} id
 */
blocks.fbs.Player.addId = function(builder, id) {
  builder.addFieldInt64(0, id, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 */
blocks.fbs.Player.addPos = function(builder, posOffset) {
  builder.addFieldStruct(1, posOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
blocks.fbs.Player.endPlayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
blocks.fbs.Message = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {blocks.fbs.Message}
 */
blocks.fbs.Message.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {blocks.fbs.Message=} obj
 * @returns {blocks.fbs.Message}
 */
blocks.fbs.Message.getRootAsMessage = function(bb, obj) {
  return (obj || new blocks.fbs.Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {blocks.fbs.Action}
 */
blocks.fbs.Message.prototype.action = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {blocks.fbs.Action} */ (this.bb.readInt8(this.bb_pos + offset)) : blocks.fbs.Action.INITIAL_POS;
};

/**
 * @returns {blocks.fbs.AType}
 */
blocks.fbs.Message.prototype.bodyType = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {blocks.fbs.AType} */ (this.bb.readUint8(this.bb_pos + offset)) : blocks.fbs.AType.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
blocks.fbs.Message.prototype.body = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
blocks.fbs.Message.startMessage = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {blocks.fbs.Action} action
 */
blocks.fbs.Message.addAction = function(builder, action) {
  builder.addFieldInt8(0, action, blocks.fbs.Action.INITIAL_POS);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {blocks.fbs.AType} bodyType
 */
blocks.fbs.Message.addBodyType = function(builder, bodyType) {
  builder.addFieldInt8(1, bodyType, blocks.fbs.AType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} bodyOffset
 */
blocks.fbs.Message.addBody = function(builder, bodyOffset) {
  builder.addFieldOffset(2, bodyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
blocks.fbs.Message.endMessage = function(builder) {
  var offset = builder.endObject();
  return offset;
};

// Exports for Node.js and RequireJS
this.blocks = blocks;
